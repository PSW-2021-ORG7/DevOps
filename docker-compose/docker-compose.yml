version: '3.9'
 
services:
  gateway_hospital:
    image: anagavrilovic/hospital-gateway:latest
    networks:
      - application
    ports:
      - "8080:8080"   
    depends_on:
      - hospital
      - integration-api
      - pharmacy 
 
  gateway_pharmacy:
    image: anagavrilovic/pharmacy-gateway:latest
    networks:
      - application
    ports:
      - "8081:8080"
    depends_on:
      - pharmacy 
 
  hospital:
    image: anagavrilovic/hospital:1.0-user
    networks:
      - application
      - database
    command: [ '/bin/sh', '-c', 'export DB_CONNECTION_STRING_H=$$(cat /run/secrets/CONNECTION_STRING) ; source /docker-entrypoint.sh' ]
    depends_on:
      - hospital-db
    ports:
      - 8086:80
    volumes:
      - type: volume
        source: hospital-api-sql
        target: /app/scripts
    secrets:
      - source: CONNECTION_STRING
        target: CONNECTION_STRING
        uid: '101'
        gid: '443'
        mode: 0440
  
  hospital-db:
    image: postgres:14.1
    networks:
      - database
    environment:
      POSTGRES_PASSWORD: password
      POSTGRES_USER: postgres
      POSTGRES_DB: database
    volumes:
      - type: volume
        source: hospital-database-data
        target: /var/lib/postgresql/data
      - type: volume
        source: hospital-api-sql
        target: /docker-entrypoint-initdb.d/
    ports:
      - 5432:5432
 
  pharmacy:
    image: marijakljestan/pharmacy:1.1-user
    networks:
      - application
      - database
    command: [ '/bin/sh', '-c', 'export DB_CONNECTION_STRING_P=$$(cat /run/secrets/CONNECTION_STRING) ; source /docker-entrypoint.sh' ]
    depends_on:
      - pharmacy-db
    ports:
      - 8087:80
    volumes:
      - type: volume
        source: pharmacy-api-sql
        target: /app/scripts
    secrets:
      - source: CONNECTION_STRING
        target: CONNECTION_STRING
        uid: '101'
        gid: '443'
        mode: 0440
 
  pharmacy-db:
    image: postgres:14.1
    networks:
      - database
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTGRES_PASSWORD
      POSTGRES_USER_FILE: /run/secrets/POSTGRES_USER
      POSTGRES_DB_FILE: /run/secrets/POSTGRES_DB
    volumes:
      - type: volume
        source: pharmacy-database-data
        target: /var/lib/postgresql/data
      - type: volume
        source: pharmacy-api-sql
        target: /docker-entrypoint-initdb.d/
    ports:
      - 5433:5432
    secrets:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB 
 
  integration-api:
    image: marijakljestan/integration:1.0-user
    networks:
      - application
      - database
    command: [ '/bin/sh', '-c', 'export DB_CONNECTION_STRING_I=$$(cat /run/secrets/CONNECTION_STRING) ; source /docker-entrypoint.sh' ]
    depends_on:
      - integration-db
    ports:
      - 8088:80
    volumes:
      - type: volume
        source: integration-api-sql
        target: /app/scripts
    secrets:
      - source: CONNECTION_STRING
        target: CONNECTION_STRING
        uid: '101'
        gid: '443'
        mode: 0440
 
  integration-db:
    image: postgres:14.1
    networks:
      - database
    environment:
      POSTGRES_PASSWORD_FILE: /run/secrets/POSTGRES_PASSWORD
      POSTGRES_USER_FILE: /run/secrets/POSTGRES_USER
      POSTGRES_DB_FILE: /run/secrets/POSTGRES_DB
    volumes:
      - type: volume
        source: integration-database-data
        target: /var/lib/postgresql/data
      - type: volume
        source: integration-api-sql
        target: /docker-entrypoint-initdb.d/
    ports:
      - 5434:5432
    secrets:
      - POSTGRES_PASSWORD
      - POSTGRES_USER
      - POSTGRES_DB
 
volumes:
  pharmacy-database-data:
    name: pharmacy-database
  hospital-database-data:
    name: hospital-database
  integration-database-data:
    name: integration-database
  pharmacy-api-sql:
  hospital-api-sql:
  integration-api-sql:
 
networks:
  application:
    name: application
    driver: overlay
  database:
    name: database
    driver: overlay
 
secrets:
  POSTGRES_USER:
    external: true
  POSTGRES_PASSWORD:
    external: true
  POSTGRES_DB: 
    external: true
  CONNECTION_STRING:
    external: true